type Greeting @entity {
  id: ID!
  sender: Sender!
  greeting: String!
  premium: Boolean
  value: BigInt
  createdAt: BigInt!
  transactionHash: String!
}

type Sender @entity {
  id: ID!
  address: Bytes!
  greetings: [Greeting!] @derivedFrom(field: "sender")
  createdAt: BigInt!
  greetingCount: BigInt!
}

type Campaign @entity {
  id: ID!
  campaignId: BigInt! # uint32
  owner: Bytes! # address
  title: String! # string
  claim: String! # string
  description: String! # string
  amountCollected: BigInt! # uint256
  amountWithdrawn: BigInt! # uint256
  createdAt: BigInt!
  donations: [Donation]! @derivedFrom(field: "campaign")
  withdrawals: [Withdrawal]! @derivedFrom(field: "campaign")
  follows: [Follow]! @derivedFrom(field: "campaign")
  updates: [CampaignUpdate]! @derivedFrom(field: "campaign")
  ideas: [Idea!]! @derivedFrom(field: "campaign")
  specialistGroupConnections: [SpecialistGroupCampaignConnection!]! @derivedFrom(field: "campaign")
  truthRatings: [TruthRating!]! @derivedFrom(field: "campaign")
}

type Donation @entity(immutable: true) {
  id: ID!
  campaign: Campaign! # uint32
  donor: Donor! # address
  comment: String!
  amount: BigInt! # uint256
  createdAt: BigInt!
}

type Donor @entity {
  id: ID!
  donations: [Donation!]! @derivedFrom(field: "donor")
  createdAt: BigInt!
  donationCount: BigInt!
}

type Withdrawal @entity(immutable: true) {
  id: ID!
  campaign: Campaign! # uint32
  withdrawer: Withdrawer! # address
  amount: BigInt! # uint256
  comment: String!
  createdAt: BigInt!
}

type Withdrawer @entity {
  id: ID!
  donations: [Withdrawal!]! @derivedFrom(field: "withdrawer")
  createdAt: BigInt!
  withdrawalCount: BigInt!
}

type Follow @entity {
  id: ID!
  campaign: Campaign!
  user: Bytes! # address
  createdAt: BigInt!
}

type CampaignUpdate @entity {
  id: ID!
  campaign: Campaign!
  author: Bytes! # address
  title: String!
  content: String!
  createdAt: BigInt!
}

type Idea @entity {
  id: ID!
  parentId: String!
  parentIndex: Int!
  children: [String!]!
  ideaType: Int!
  text: String!
  x: Int!
  y: Int!
  campaign: Campaign!
  truthRatings: [TruthRating!]! @derivedFrom(field: "idea")
}

type SpecialistGroup @entity {
  id: ID!
  groupId: Int!
  owner: Bytes! # address
  status: Int!
  name: String!
  specification: String!
  memberships: [SpecialistGroupMembership!]! @derivedFrom(field: "group")
  createdAt: BigInt!
  truthRatings: [TruthRating!]! @derivedFrom(field: "group")
}

type SpecialistGroupMembership @entity {
  id: ID!
  owner: Bytes! # address
  member: Bytes! # address
  group: SpecialistGroup!
  comments: String!
  evidenceUrl: String!
  createdAt: BigInt!
}

type SpecialistGroupCampaignConnection @entity {
  id: ID!
  owner: Bytes! # address
  campaign: Campaign!
  group: SpecialistGroup!
  comments: String!
  createdAt: BigInt!
}

type TruthRating @entity {
  id: ID!
  campaign: Campaign!
  group: SpecialistGroup!
  idea: Idea!
  rater: String!
  ratingScore: Int! # 0-10 maps to: 0.0 - 5.0 in half-steps (divide by 2 for the actual rating value)
  comments: String!
  createdAt: BigInt!
}
