type Greeting @entity {
  id: ID!
  sender: Sender!
  greeting: String!
  premium: Boolean
  value: BigInt
  createdAt: BigInt!
  transactionHash: String!
}

type Sender @entity {
  id: ID!
  address: Bytes!
  greetings: [Greeting!] @derivedFrom(field: "sender")
  createdAt: BigInt!
  greetingCount: BigInt!
}

type Campaign @entity {
  id: ID!
  campaignId: BigInt! # uint32
  owner: Bytes! # address
  title: String! # string
  claim: String! # string
  description: String! # string
  amountCollected: BigInt! # uint256
  amountWithdrawn: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Donation @entity(immutable: true) {
  id: ID!
  campaignId: BigInt! # uint32
  donor: Bytes! # address
  amount: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Donor @entity {
    id: ID!
    donations: [Donation!]! @derivedFrom(field: "donor")
}

type Withdrawal @entity(immutable: true) {
  id: ID!
  campaignId: BigInt! # uint32
  withdrawer: Bytes! # address
  amount: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Withdrawer @entity {
    id: ID!
    donations: [Withdrawal!]! @derivedFrom(field: "withdrawer")
}
